/*

*/
#include <Adafruit_NeoPixel.h>

const byte numberOfStrips = 4;
const byte ledPin[numberOfStrips] = {8, 9, 10, 11};
const byte ledCount = 60;

Adafruit_NeoPixel strip[numberOfStrips] = {
  Adafruit_NeoPixel(ledCount, ledPin[0], NEO_GRB + NEO_KHZ800),
  Adafruit_NeoPixel(ledCount, ledPin[1], NEO_GRB + NEO_KHZ800),
  Adafruit_NeoPixel(ledCount, ledPin[2], NEO_GRB + NEO_KHZ800),
  Adafruit_NeoPixel(ledCount, ledPin[3], NEO_GRB + NEO_KHZ800)
};

const int button[numberOfStrips] = {3, 4, 5, 6};
const int ResetButton5 = 7;

byte oldButtonState[numberOfStrips] = {HIGH};
byte buttonState[numberOfStrips]    = {HIGH};
boolean shouldRainbow[numberOfStrips]   = {false};
boolean rainbowPhase[numberOfStrips]    = {0};

int pixelCycle[numberOfStrips] = {0};           // Pattern Pixel Cycle
unsigned long currentMillis[numberOfStrips] = {0};
unsigned long pixelPrevious[numberOfStrips] = {0};

void setup()
{
  for (byte i = 0; i < numberOfStrips; ++i)
  {
    pinMode(button[i], INPUT_PULLUP);
    strip[i].begin();           // INITIALIZE NeoPixel strip object (REQUIRED)
    strip[i].setBrightness(50); // Set BRIGHTNESS to about 1/5 (max = 255)
    strip[i].show();            // Turn OFF all pixels ASAP
  }
  pinMode(ResetButton5, INPUT_PULLUP) ;

  Serial.begin(9600);
}

void loop()
{
  for (byte i = 0; i < numberOfStrips; ++i)
  {
    buttonState[i] = digitalRead(button[i]);

    if (buttonWasReleased(i))
      shouldRainbow[i] = true;
      
    if (shouldRainbow[i])    
      rainbow(i);    
  }
}

bool buttonWasReleased(byte i)
{
  return (buttonState[i] == LOW && oldButtonState[i] == HIGH);
}
